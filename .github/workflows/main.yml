name: golang application


on:
  push:
   branches: ["main"]
   tags: 
     - v[0-9]+.[0-9]+
     - v[0-9]+.[0-9]+.[0-9]+
     - v[0-9]+.[0-9]+.[0-9]+.[0-9]+
     

jobs:
  job:
    strategy:
      matrix:
        os: [ubuntu-20.04,windows-latest,macos-latest]


    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3 
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
       
      - name: dependancy
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.1  
          go mod tidy
          protoc --proto_path=./  --go_out=./ ./test.proto
     
      - name: testing
        run: go test -v  test.pb.go  main.go  main_test.go
        
      - name: build
        if: github.ref_type=='tag' 
        run: go build main
 
      - name: Upload Artifacts
        if: github.ref_type=='tag' 
        uses: actions/upload-artifact@v3
        with:
          name: test-${{ matrix.os }}
          path: main.*
          
 
      - name: download-artifact   
        if: github.ref_type=='tag' 
        uses: actions/download-artifact@v3
        with: 
          path: ./artifact/
   

      - name: note
        if: github.ref_type=='tag' 
        shell: python 
        run: |
          import os;f=open('releasenotes.md',"r");obj={i[0].strip():i[1:] for i in [i.split('-') for i in f.read().split('##')[1:]]};f.close()
          note=[obj[i] for i in obj if i=='${{github.ref_name}}'];note=[note[0] if note else ''][0]
          os.system("echo 'NOTE<<EOF' >> $GITHUB_ENV")
          tmp=[os.system("echo '{}' >> $GITHUB_ENV".format(n.strip())) for n in note ]
          os.system("echo 'EOF' >> $GITHUB_ENV")
          
      - name: Create Release
        if: github.ref_type=='tag' 
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{github.ref_name}}
          name: ${{github.ref_name}}
          body: ${{env.NOTE}}
          prerelease: false
          files: ./artifact/test-${{ matrix.os }}/*
          draft: false

